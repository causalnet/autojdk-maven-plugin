#Delete any previously installed JDK with our testing vendor
#Invoker goals are hardcoded to be split by commas with no escape mechanism so need to have any properties with commas in them defined in maven opts instead
invoker.mavenOpts.1=-Dautojdk.purge.version=[17,18) -Dautojdk.purge.vendor=galah-vendor -Dautojdk.purge.caches=true
invoker.goals.1=${project.groupId}:${project.artifactId}:${project.version}:purge-jdks

#Run everything except autojdk/toolchains without a proxy configured in Maven just so all necessary dependencies are downloaded from remotes
#Once we have a proxy and mess with system truststore for the JVM it won't be able to download any more stuff remotely
invoker.goals.2=clean install -Dautojdk.skip=true -P-toolchainsProfile

#Now run with everything turned on and with proxy server configured in settings.xml
#which will be used for both Maven dependency resolution and autojdk downloading (which is what we are testing here)
invoker.settingsFile.3=src/it/proxy-auth/settings.xml

#We use Wiremock as a proxy server with fake responses - but it fakes SSL as well so we need to trust its SSL keys and ignore hostnames
#because under some later JDKs the dynamic cert generation of Wiremock fails and it serves only its root cert for all sites
invoker.goals.3=clean install -Djdk.internal.httpclient.disableHostnameVerification=true -Djavax.net.ssl.trustStore=${project.build.directory}/wiremock-keystore/keystore -Dautojdk.download.allowHttp=true

#Run last - changing settings file seems to affect subsequent projects sometimes (invoker bug?)
#so running this project last avoids these problems
invoker.ordinal=-100
